<?xml version="1.0" encoding="GBK"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
    

<sqlMap>

    
    <resultMap id="RM.MyBatisUserInfo" class="com.company.project.dataobject.MyBatisUserInfoDO">
		<result property="userId" column="USER_ID" javaType="java.lang.Long" jdbcType="BIGINT"  />
		<result property="username" column="USERNAME" javaType="java.lang.String" jdbcType="VARCHAR"  />
		<result property="password" column="PASSWORD" javaType="java.lang.String" jdbcType="VARCHAR"  />
		<result property="birthDate" column="BIRTH_DATE" javaType="java.sql.Date" jdbcType="DATE"  />
		<result property="sex" column="SEX" javaType="java.lang.Byte" jdbcType="TINYINT"  />
		<result property="age" column="AGE" javaType="java.lang.Integer" jdbcType="INTEGER"  />
    </resultMap>
    
	<sql id="UserInfo.columns">
		<![CDATA[
		USER_ID,USERNAME,PASSWORD,BIRTH_DATE,SEX,AGE
	    ]]>
	</sql>
		
	<sql id="UserInfo.findPage.where">
		<where>	      				
	       <if test="@Ognl@isNotEmpty(userId)">
				AND USER_ID = #{userId}
			</if>
	       <if test="@Ognl@isNotEmpty(username)">
				AND USERNAME = #{username}
			</if>
	       <if test="@Ognl@isNotEmpty(password)">
				AND PASSWORD = #{password}
			</if>
	       <if test="@Ognl@isNotEmpty(birthDateBegin)">
				AND BIRTH_DATE >= #{birthDateBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(birthDateEnd)">
				AND BIRTH_DATE &lt;= #{birthDateEnd}
		   </if>
	       <if test="@Ognl@isNotEmpty(sex)">
				AND SEX = #{sex}
			</if>
	       <if test="@Ognl@isNotEmpty(age)">
				AND AGE = #{age}
			</if>
			<choose>
				<when test="@Ognl@isNotEmpty(sex)">AND sex = #{sexWhen}</when>
				<when test="@Ognl@isNotEmpty(sex)">AND age = #{ageWhen}</when>
				<otherwise>AND BIRTH_DATE = #{birthDateOtherwise}</otherwise>
			</choose>
			and username in 
			<foreach close=")" collection="usernamesByItem" index="index" item="item" open="(" separator=",">  
        		#{item} 
   			</foreach> 
   			and username in 
   			<foreach close=")" collection="usernamesByIndexDollar" index="index" item="item" open="(" separator=",">  
       		#{usernamesByIndex[${index}]}
  			</foreach> 	
  			
  			and username in 
   			<foreach close=")" collection="usernamesByIndex" index="index" item="item" open="(" separator=",">  
       		#{usernamesByIndex[index]}
  			</foreach> 			
		</where>
	</sql>
		

	
	
    
	<insert id="MyBatisUserInfo.UserInfo.insert">
		<![CDATA[
        INSERT INTO USER_INFO (
        	USER_ID ,
        	USERNAME ,
        	PASSWORD ,
        	BIRTH_DATE ,
        	SEX ,
        	AGE 
        ) VALUES (
        	#{userId} ,
        	#{username} ,
        	#{password} ,
        	#{birthDate} ,
        	#{sex} ,
        	#{age} 
        )
    ]]>
	</insert>
	
	<update id="MyBatisUserInfo.UserInfo.update">
		<![CDATA[
        UPDATE USER_INFO SET
	        USERNAME = #{username} ,
	        PASSWORD = #{password} ,
	        BIRTH_DATE = #{birthDate} ,
	        SEX = #{sex} ,
	        AGE = #{age} 
        WHERE 
	        USER_ID = #{userId} 
    ]]>
	</update>
	
    
	
	
	<delete id="MyBatisUserInfo.UserInfo.delete">
		<![CDATA[
        DELETE FROM USER_INFO WHERE
        USER_ID = #{id} 
    ]]>
    </delete>
    
	
	<select id="MyBatisUserInfo.UserInfo.getById" resultMap="RM.UserInfo" >
    	SELECT  /* MyBatisUserInfo.UserInfo.getById */ <include refid="UserInfo.columns"/>
	    <![CDATA[
		    FROM USER_INFO 
	        WHERE 
		        USER_ID = #{id} 
	    ]]>
	</select>	

	    
	
	
    
	
	<select id="MyBatisUserInfo.UserInfo.findPage.count" resultClass="Long" >
    	SELECT  /* MyBatisUserInfo.UserInfo.findPage.count */ count(*) FROM USER_INFO 
		<include refid="UserInfo.findPage.where"/>
	</select>	

	    
	
	
    
	
	<select id="MyBatisUserInfo.UserInfo.findPage" resultMap="RM.UserInfo" >
    	SELECT  /* MyBatisUserInfo.UserInfo.findPage */ <include refid="UserInfo.columns"/>
	    FROM USER_INFO 
		<include refid="UserInfo.findPage.where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
	</select>	

	    
	
	
    
	
	<select id="MyBatisUserInfo.UserInfo.getByUsername" resultMap="RM.UserInfo" >
    	SELECT  /* MyBatisUserInfo.UserInfo.getByUsername */ <include refid="UserInfo.columns"/>
	    <![CDATA[
	        FROM USER_INFO where USERNAME = #{username}
	    ]]>
	</select>	

	    
	
	
    
	
	<select id="MyBatisUserInfo.UserInfo.getByAge" resultMap="RM.UserInfo" >
    	SELECT  /* MyBatisUserInfo.UserInfo.getByAge */ <include refid="UserInfo.columns"/>
	    <![CDATA[
	        FROM USER_INFO where AGE = #{age}
	    ]]>
	</select>	

	    
	
	
    

</sqlMap>

